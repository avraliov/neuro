Metrics computed for /home/andrey/programs/ada/neuro/src/activate-linear.ads
containing generic package Activate.Linear

=== Code line metrics ===
  all lines           : 35
  code lines          : 28
  comment lines       : 0
  end-of-line comments: 0
  comment percentage  : 0.00
  blank lines         : 7

Activate.Linear (generic package - library item at lines  3: 35)

=== Code line metrics ===
   all lines           : 33
   code lines          : 27
   comment lines       : 0
   end-of-line comments: 0
   comment percentage  : 0.00
   blank lines         : 6

=== Element metrics ===
   public types             : 1
      including
      tagged types    : 1
      private types   : 1
   all type definitions     : 1
   public subprograms       : 5
   all statements           : 0
   all declarations         : 25
   logical SLOC             : 25
   maximal unit nesting     : 1
   maximal construct nesting: 1

   Get_Routine (function at lines  8: 8)
      all parameters           : 0

   Get_Activate (function at lines  9: 9)
      all parameters           : 1
         IN parameters         : 1
         OUT parameters        : 0
         IN OUT parameters     : 0

   Get_Activate (function at lines  10: 10)
      all parameters           : 0

   Get_Derivative (function at lines  11: 11)
      all parameters           : 1
         IN parameters         : 1
         OUT parameters        : 0
         IN OUT parameters     : 0

   Get_Activate_Enum (function at lines  12: 12)
      all parameters           : 1
         IN parameters         : 1
         OUT parameters        : 0
         IN OUT parameters     : 0

   Func (function at lines  15: 15)
      all parameters           : 2
         IN parameters         : 2
         OUT parameters        : 0
         IN OUT parameters     : 0

   DerivativeFunc (function at lines  16: 17)
      all parameters           : 1
         IN parameters         : 1
         OUT parameters        : 0
         IN OUT parameters     : 0

   Get_Routine (expression function at lines  24: 25)

   === Code line metrics ===
      all lines           : 2
      code lines          : 2
      comment lines       : 0
      end-of-line comments: 0
      comment percentage  : 0.00
      blank lines         : 0

   === Element metrics ===
      all statements           : 0
      all declarations         : 1
      logical SLOC             : 1
      maximal construct nesting: 1

   === Complexity metrics ===
      statement complexity     : 1
      expression complexity    : 0
      cyclomatic complexity    : 1
      essential complexity     : 1
      maximum loop nesting     : 0
      extra exit points        : 0

   Get_Activate (expression function at lines  26: 27)

   === Code line metrics ===
      all lines           : 2
      code lines          : 2
      comment lines       : 0
      end-of-line comments: 0
      comment percentage  : 0.00
      blank lines         : 0

   === Element metrics ===
      all statements           : 0
      all declarations         : 2
      logical SLOC             : 2
      maximal construct nesting: 1

   === Complexity metrics ===
      statement complexity     : 1
      expression complexity    : 0
      cyclomatic complexity    : 1
      essential complexity     : 1
      maximum loop nesting     : 0
      extra exit points        : 0

   Get_Activate (expression function at lines  28: 29)

   === Code line metrics ===
      all lines           : 2
      code lines          : 2
      comment lines       : 0
      end-of-line comments: 0
      comment percentage  : 0.00
      blank lines         : 0

   === Element metrics ===
      all statements           : 0
      all declarations         : 1
      logical SLOC             : 1
      maximal construct nesting: 1

   === Complexity metrics ===
      statement complexity     : 1
      expression complexity    : 0
      cyclomatic complexity    : 1
      essential complexity     : 1
      maximum loop nesting     : 0
      extra exit points        : 0

   Get_Derivative (expression function at lines  30: 31)

   === Code line metrics ===
      all lines           : 2
      code lines          : 2
      comment lines       : 0
      end-of-line comments: 0
      comment percentage  : 0.00
      blank lines         : 0

   === Element metrics ===
      all statements           : 0
      all declarations         : 2
      logical SLOC             : 2
      maximal construct nesting: 1

   === Complexity metrics ===
      statement complexity     : 1
      expression complexity    : 0
      cyclomatic complexity    : 1
      essential complexity     : 1
      maximum loop nesting     : 0
      extra exit points        : 0

   Get_Activate_Enum (expression function at lines  32: 33)

   === Code line metrics ===
      all lines           : 2
      code lines          : 2
      comment lines       : 0
      end-of-line comments: 0
      comment percentage  : 0.00
      blank lines         : 0

   === Element metrics ===
      all statements           : 0
      all declarations         : 2
      logical SLOC             : 2
      maximal construct nesting: 1

   === Complexity metrics ===
      statement complexity     : 1
      expression complexity    : 0
      cyclomatic complexity    : 1
      essential complexity     : 1
      maximum loop nesting     : 0
      extra exit points        : 0

=== Average complexity metrics ===
      statement_complexity     :  1.00
      expression_complexity    :  0.00
      cyclomatic_complexity    :  1.00
      essential_complexity     :  1.00
      max_loop_nesting         :  0.00
